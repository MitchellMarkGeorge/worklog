.button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    white-space: nowrap;
    flex-shrink: 0;
    flex-direction: row;
    gap: 0.375rem;
    border-radius: var(--border-radius);
    border: none;
    /* do I need this */
    outline: none;
    color: var(--gray-300);
    transition-property: background-color;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;

    [data-theme="dark"] & {
        color: var(--gray-800);
    }

    &:hover {
        cursor: pointer;
    }

    & .icon {
        color: inherit;
    }

    &.primary {
        background-color: var(--primary-color);
        &:hover {
            background-color: var(--primary-hover-color);
        }
    }

    &.destructive {
        color: var(--gray-50);
        background-color: var(--destructive-color);
        &:hover {
            background-color: var(--destructive-hover-color);
        }
    }

    &.outline {
        color: var(--default-text-color);
        background-color: var(--background-color);
        box-shadow: inset 0 0 0 1px var(--outline-color);
        
        &:hover {
            background-color: var(--background-color-hover);
        }
    }

    &.enhanced {
        color: var(--default-text-color);
        background-color: var(--background-color);
        /* based on this: https://dev.to/afif/border-with-gradient-and-radius-387f */
        /* and this: https://benfrain.com/how-to-create-rounded-gradient-borders-with-any-background-in-css */
        position: relative;

        &:before {
            content: "";
            position: absolute;
            inset: 0;
            border-radius: inherit;
            padding: 2px;
            background: var(--enhanced-gradient);
            mask:
                linear-gradient(#000 0 0) content-box,
                linear-gradient(#000 0 0);
            mask-composite: exclude;
        }
        
        &:hover {
            background-color: var(--background-color-hover);
        }

        & .icon {
            /* think about this */
            /* fill: var(--default-text-color); */
            /* fill: var(--pink-500); */
            /* color: var(--pink-500); */
            /* fill: rgba(236, 72, 153, 1);
            color: rgba(236, 72, 153, 1); */
        }
    }

    &.ghost {
        color: var(--default-text-color);
        background-color: var(--background-color);
        &:hover {
            background-color: var(--background-color-hover);
        }
    }

    &.default {
        height: 2rem;
        padding: 0.375rem 0.5rem;
        font: var(--text-sm);
        font-weight: var(--font-weight-semibold);

        & .icon {
            width: 1rem;
            height: 1rem;
        }
    }

    &.medium {
        height: 2.25rem;
        padding: 0.625rem 0.5rem;
        font: var(--text-base);
        font-weight: var(--font-weight-semibold);

        & .icon {
            width: 1.25rem;
            height: 1.25rem;
        }
    }

    &.large {
        height: 2.5rem;
        padding: 0.75rem 0.5rem;
        font: var(--text-lg);
        font-weight: var(--font-weight-semibold);

        & .icon {
            width: 1.5rem;
            height: 1.5rem;
        }
    }
}
